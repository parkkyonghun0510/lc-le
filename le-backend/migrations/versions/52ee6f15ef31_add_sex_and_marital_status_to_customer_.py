"""add_sex_and_marital_status_to_customer_applications

Revision ID: 52ee6f15ef31
Revises: 611618411ab8
Create Date: 2025-09-14 15:26:06.496112

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '52ee6f15ef31'
down_revision = '611618411ab8'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add sex column with appropriate constraints
    op.add_column('customer_applications', sa.Column('sex', sa.String(length=20), nullable=True, comment='Gender: male, female, other'))
    
    # Add marital_status column with appropriate constraints
    op.add_column('customer_applications', sa.Column('marital_status', sa.String(length=20), nullable=True, comment='Marital status: single, married, divorced, widowed, separated'))
    
    # Create check constraints for data integrity
    op.create_check_constraint(
        'ck_customer_applications_sex_valid',
        'customer_applications',
        "sex IN ('male', 'female', 'other')"
    )
    
    op.create_check_constraint(
        'ck_customer_applications_marital_status_valid',
        'customer_applications',
        "marital_status IN ('single', 'married', 'divorced', 'widowed', 'separated')"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop check constraints first
    op.drop_constraint('ck_customer_applications_marital_status_valid', 'customer_applications', type_='check')
    op.drop_constraint('ck_customer_applications_sex_valid', 'customer_applications', type_='check')
    
    # Drop columns
    op.drop_column('customer_applications', 'marital_status')
    op.drop_column('customer_applications', 'sex')
    # ### end Alembic commands ###